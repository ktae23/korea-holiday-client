name: Release to JitPack

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine PR title for tag
        id: find_pr
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pulls } = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
            });
            if (!pulls.length) {
              core.setFailed("No pull request found for this commit");
              return;
            }
            core.setOutput("tag", pulls[0].title.trim());

      - name: Create and push tag
        run: |
          TAG="${{ steps.find_pr.outputs.tag }}"
          echo "Tagging release: $TAG"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "$TAG"
          git push origin "$TAG"

      - name: Update README version
        run: |
          TAG="${{ steps.find_pr.outputs.tag }}"
          # build.gradle.kts와 README.md 내 implementation(...) 버전을 새로운 TAG로 교체
          sed -i "s#implementation(\\"com.github.ktae23:korea-holiday-client:[^\\\"]*\\")#implementation(\\"com.github.ktae23:korea-holiday-client:$TAG\\")#g" build.gradle.kts README.md
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if git diff --exit-code build.gradle.kts README.md; then
            echo "No version changes"
          else
            git add build.gradle.kts README.md
            git commit -m "chore: update version references to $TAG"
            git push origin main
          fi
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ steps.find_pr.outputs.tag }}
          release_name: "${{ steps.find_pr.outputs.tag }}"
          body: |
            자동 생성 릴리스: ${{ steps.find_pr.outputs.tag }}
          draft: false
          prerelease: false
